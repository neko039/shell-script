#!/bin/bash

bins="/.Recycle_Bin"
own_bin="$bins/$(id -nu)"
historyfile="$HOME/.rm_history"
realrm="$(which rm)"
copy="$(which cp)"
move="$(which mv)"
info_page="/usr/share/doc/saferm/README"

# if no tmpdir then create dir
if [ ! -d $own_bin ];
then
	if [ ! -d $bins ] || [ ! -w $bins ];
	then
		echo "error:Need to create dir: $bins or $bin need wirte permission"
		exit 1
	fi
	mkdir $own_bin
	chmod 700 $own_bin
fi

# add history
echo "$0 $*" >> $historyfile


# option
flags=""

while getopts "fiIrRdvHU:A" opt
do
	case $opt in
	f)
		exec $realrm "$@"
		;;
	H)
		cat -n $historyfile
		exit 0
		;;
	U)
		history_log=$(sed -n ${OPTARG}p $historyfile)
		checkopt=""
		#original_path=""
		echo -e "now is undo: \"$history_log\""
		col_num=$(echo $history_log|awk '{print NF}')
		count=0
		for(( i=2;i<=$col_num;i++ ))
		do
			col_info=$(echo $history_log|awk '{print $'''$i'''}')
			if [[ $col_info =~ ^- ]];
			then
				checkopt="${checkopt}$col_info "
			else
				original_path[$count]="$col_info"
				count=$(( $count+1 ))
			fi
		done	
		if [[ $checkopt =~ R|r|i|I|d|v ]];
		then
			echo "can undo"
			for(( j=0;j<count;j++ ))
			do
				$move $own_bin/$(basename ${original_path[j]}) ${original_path[j]}
			done
		elif [[ $checkopt =~ H|U|f|A ]];
		then
			echo "could not undo"
		elif [ ! $checkopt ];
		then
			echo "no option"
			for(( k=0;k<count;k++ ))
                        do        
                        	$move $own_bin/$(basename ${original_path[k]}) ${original_path[k]}
			done 
		else
			:
		fi
			
		exit 0
		;;
	A)
		sed -n '/^OPTIONS/,$p' $info_page|sed 's/OPTIONS/usage:/g'
		exit 0
		;;
	*)
		flags="$flag -$opt"
		;;
	esac
done
shift $(( $OPTIND - 1 ))

#run rm 
for arg 
do
	newname="$own_bin/$(basename "$arg")"
	if [ -f "$arg" ];
 	then
    		$copy "$arg" "$newname"
	elif [ -d "$arg" ];
	then
    		$copy -r "$arg" "$newname"
	else
		:
  	fi
done

exec $realrm $flags "$@"
